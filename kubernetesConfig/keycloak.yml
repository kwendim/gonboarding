#uses cloud-sql-proxy sidecar container to communicate with Cloud SQL database
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  namespace: default
  labels:
    app: keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      serviceAccountName: cloudsql
      containers:
      - name: cloud-sql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.17
        command:
          - "/cloud_sql_proxy"
          - "-ip_address_types=PRIVATE"
          - "-instances=g-onboarding:europe-west1:keycloak-db=tcp:5432"
        securityContext:
          runAsNonRoot: true
      - name: keycloak
        image: quay.io/keycloak/keycloak:11.0.2
        env:        
        - name: DB_ADDR
          valueFrom:
            secretKeyRef:
              name: keycloak-secret
              key: db_addr

        - name: DB_DATABASE
          valueFrom:
            secretKeyRef:
              name: keycloak-secret
              key: db_database
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: keycloak-secret
              key: db_password
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: keycloak-secret
              key: db_user
        - name: DB_VENDOR
          valueFrom:
            secretKeyRef:
              name: keycloak-secret
              key: db_vendor
        - name: KEYCLOAK_USER
          valueFrom:
            secretKeyRef:
              name: keycloak-secret
              key: keycloak_user
        - name: KEYCLOAK_PASSWORD
          valueFrom:
            secretKeyRef:
              name: keycloak-secret
              key: keycloak_password
        - name: PROXY_ADDRESS_FORWARDING
          value: "true"
        ports:
        - name: http
          containerPort: 8080
        - name: https
          containerPort: 8443
        readinessProbe:
          httpGet:
            path: /auth/realms/master
            port: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak
  labels:
    app: keycloak
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  - name: https
    port: 8443
    targetPort: 8443
  selector:
    app: keycloak
  type: ClusterIP
